# Makefile for program - wdimex
#
# History:  95/08/11 kmflynn

# Usage:  make [BINDIR=path_to_install_to] [install] [| tee makeout]
#
# Examples:  make
#            make install BINDIR=/usr/opt/bin
#            make install BINDIR=$HOME/bin

# Compiler flags (Fortran - Green Hills):
#    C - check subranges and array bounds
#    u - default data type for undeclareds is undefined
#    g - generate source level symbolic debug information
#   OM - optimization
# (NOTE: set OpgDbg to: OptM to generate optimized code
#                       DbgF to generate debug code)
DbgF   = -g
OptM   = -OM
OptDbg = $(OptM)
Incl_1 = ../wdm
Incls = -I$(Incl_1)
FFLAGS = -C -u $(OptDbg) $(Incls)

# Compiler name
F77 = f77

# this description file uses the Bourne shell
SHELL = /bin/sh

#*******************************************************************
#***** You should not need to modify anything below this line. *****
#*******************************************************************

program = wdimex
Objects = wdimex.o wdimez.o
Share   = cdrloc.inc cfbuff.inc

LibDir  = ../../lib
Libs    = $(LibDir)/wdmlib.a $(LibDir)/adwdmlib.a $(LibDir)/utillib.a

BINDIR  = ../../bin
binary  = ../../bin
binMake = $(binary)/$(program)
binInst = $(BINDIR)/$(program)
 
# Rules
all: includes $(binary) $(binMake) install
	@echo "\n"Done making all, files are now up to date."\n"

# program dependencies
$(binMake):  $(Objects) $(Libs)
	$(F77) $(Objects) $(Libs) -o $@
$(binary):
	@if [ ! -d $(binary) ]   ; then             \
		mkdir $(binary)  ;                  \
		echo Created directory $(binary) ;  \
	fi
install:
# Create directory for binary file, if necessary
	@if [ ! -d $(BINDIR) ]   ; then             \
		mkdir $(BINDIR) ;                   \
		echo  Created directory $(BINDIR) ; \
	fi
# Link executable to BINDIR if installing elsewhere
	@if [ ! -s $(binMake) ] ; then                                   \
		echo program $(binMake) does not exist, ;                \
		echo use one of the following commands to generate it:;  \
		echo "     make" ;  echo "     make all" ;               \
	else                                                             \
		if [ $(BINDIR) != $(binary) ] ; then                     \
			rm -f $(binInst) ;                               \
			cd ../..; ln -s `pwd`/bin/$(program) $(binInst); \
			chmod 644 $(binInst) ;                           \
			echo "\n"Program $(binInst) has been updated.;   \
		fi ; \
	fi
clean:
	@if [ $(BINDIR) != $(binary) ] ; then rm -f $(binInst) ; fi
	rm -f *.o $(binMake)
	@echo Removed files generated by make."\n"
includes:
#	@for inc in $(Share) ; do                                              \
#		if [ -f $$inc ] ; then                                         \
#			echo ;                                                 \
#			echo "NOTICE--duplicate $$inc appended to ERROR.inc" ; \
#			echo ;                                                 \
#			cat $$inc >> ERROR.inc ;                               \
#			rm $$inc ;                                             \
#		fi ;                                                           \
#	done

# Define object file dependencies:
wdimex.o: fversn.inc $(Incl_1)/cdrloc.inc $(Incl_1)/cfbuff.inc

# end of make
